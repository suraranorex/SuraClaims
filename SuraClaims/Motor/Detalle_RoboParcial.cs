///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SuraClaims.Motor
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Detalle_RoboParcial recording.
    /// </summary>
    [TestModule("8299e360-ca42-4770-99e6-6c6927e3a251", ModuleType.Recording, 1)]
    public partial class Detalle_RoboParcial : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::SuraClaims.SuraClaimsRepository repository.
        /// </summary>
        public static global::SuraClaims.SuraClaimsRepository repo = global::SuraClaims.SuraClaimsRepository.Instance;

        static Detalle_RoboParcial instance = new Detalle_RoboParcial();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Detalle_RoboParcial()
        {
            DescripcionRobo = "Rueda";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Detalle_RoboParcial Instance
        {
            get { return instance; }
        }

#region Variables

        string _DescripcionRobo;

        /// <summary>
        /// Gets or sets the value of variable DescripcionRobo.
        /// </summary>
        [TestVariable("8b8b6ed9-6305-4799-b0e8-9f5e4e8b44b5")]
        public string DescripcionRobo
        {
            get { return _DescripcionRobo; }
            set { _DescripcionRobo = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("e7903828-6ac1-46d3-a887-f52fdafb621a")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable TipoRobo.
        /// </summary>
        [TestVariable("3209f30e-77dc-4b11-b7ce-ff3c32d3b435")]
        public string TipoRobo
        {
            get { return repo.TipoRobo; }
            set { repo.TipoRobo = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.InformacionSiniestro.cb_TipoRobo' at Center.", repo.SuraClaims.Motor.InformacionSiniestro.cb_TipoRoboInfo, new RecordItemIndex(0));
            repo.SuraClaims.Motor.InformacionSiniestro.cb_TipoRobo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.InformacionSiniestro.bttn_Agregar_Robo' at Center.", repo.SuraClaims.Motor.InformacionSiniestro.bttn_Agregar_RoboInfo, new RecordItemIndex(1));
            repo.SuraClaims.Motor.InformacionSiniestro.bttn_Agregar_Robo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.InformacionSiniestro.txt_Ninguna_Robo' at Center.", repo.SuraClaims.Motor.InformacionSiniestro.txt_Ninguna_RoboInfo, new RecordItemIndex(2));
            repo.SuraClaims.Motor.InformacionSiniestro.txt_Ninguna_Robo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'SuraClaims.Motor.InformacionSiniestro.txt_Ninguna_Robo'.", repo.SuraClaims.Motor.InformacionSiniestro.txt_Ninguna_RoboInfo, new RecordItemIndex(3));
            Keyboard.PrepareFocus(repo.SuraClaims.Motor.InformacionSiniestro.txt_Ninguna_Robo);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DescripcionRobo' with focus on 'SuraClaims.Motor.InformacionSiniestro.txt_Ninguna_Robo'.", repo.SuraClaims.Motor.InformacionSiniestro.txt_Ninguna_RoboInfo, new RecordItemIndex(4));
            repo.SuraClaims.Motor.InformacionSiniestro.txt_Ninguna_Robo.PressKeys(DescripcionRobo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.InformacionSiniestro.txt_DetallesRobo' at Center.", repo.SuraClaims.Motor.InformacionSiniestro.txt_DetallesRoboInfo, new RecordItemIndex(5));
            repo.SuraClaims.Motor.InformacionSiniestro.txt_DetallesRobo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(6));
            Delay.Duration(1000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
