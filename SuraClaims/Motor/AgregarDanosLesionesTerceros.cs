///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SuraClaims.Motor
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AgregarDanosLesionesTerceros recording.
    /// </summary>
    [TestModule("1d1b1070-4721-45fa-a90b-86f7b3d30f93", ModuleType.Recording, 1)]
    public partial class AgregarDanosLesionesTerceros : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::SuraClaims.SuraClaimsRepository repository.
        /// </summary>
        public static global::SuraClaims.SuraClaimsRepository repo = global::SuraClaims.SuraClaimsRepository.Instance;

        static AgregarDanosLesionesTerceros instance = new AgregarDanosLesionesTerceros();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AgregarDanosLesionesTerceros()
        {
            Ambiente = "ssurgwsoadev4-oci.opc.oracleoutsourcing.com";
            Anio = "2019";
            Marca = "CHEVROLET";
            Patente = "jio098";
            Nombre = "PRUEBA";
            Apellido = "DOS";
            Modelo = "ONIX";
            Tipo = "AUTO";
            NumeroDNI = "25667887";
            TipoDocumento = "D.N.I.";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AgregarDanosLesionesTerceros Instance
        {
            get { return instance; }
        }

#region Variables

        string _Marca;

        /// <summary>
        /// Gets or sets the value of variable Marca.
        /// </summary>
        [TestVariable("f6a1ccf1-50d3-4c87-a5d1-6979a34994d6")]
        public string Marca
        {
            get { return _Marca; }
            set { _Marca = value; }
        }

        string _Patente;

        /// <summary>
        /// Gets or sets the value of variable Patente.
        /// </summary>
        [TestVariable("ea02b40d-4a41-4fdb-a346-5d2af69b93c1")]
        public string Patente
        {
            get { return _Patente; }
            set { _Patente = value; }
        }

        string _Apellido;

        /// <summary>
        /// Gets or sets the value of variable Apellido.
        /// </summary>
        [TestVariable("47a4e260-de20-471c-a433-b40cb2fe5ec8")]
        public string Apellido
        {
            get { return _Apellido; }
            set { _Apellido = value; }
        }

        string _Modelo;

        /// <summary>
        /// Gets or sets the value of variable Modelo.
        /// </summary>
        [TestVariable("d565afaa-4267-4c98-ad9f-12940914a519")]
        public string Modelo
        {
            get { return _Modelo; }
            set { _Modelo = value; }
        }

        string _Tipo;

        /// <summary>
        /// Gets or sets the value of variable Tipo.
        /// </summary>
        [TestVariable("a43c0c39-8c94-4f4f-a7cb-e81f98522997")]
        public string Tipo
        {
            get { return _Tipo; }
            set { _Tipo = value; }
        }

        string _NumeroDNI;

        /// <summary>
        /// Gets or sets the value of variable NumeroDNI.
        /// </summary>
        [TestVariable("8b97bcd9-22eb-481a-a71f-249e98221498")]
        public string NumeroDNI
        {
            get { return _NumeroDNI; }
            set { _NumeroDNI = value; }
        }

        string _TipoDocumento;

        /// <summary>
        /// Gets or sets the value of variable TipoDocumento.
        /// </summary>
        [TestVariable("a56dd401-e253-47eb-bb00-7046143ff00b")]
        public string TipoDocumento
        {
            get { return _TipoDocumento; }
            set { _TipoDocumento = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("4881108b-cef7-4b36-85c3-0cad28fb470a")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Anio.
        /// </summary>
        [TestVariable("54cf1981-6a92-4a52-889c-4e5b59a28c4d")]
        public string Anio
        {
            get { return repo.Anio; }
            set { repo.Anio = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Nombre.
        /// </summary>
        [TestVariable("7a5727aa-2d9a-4b78-9b62-86ef3754f35a")]
        public string Nombre
        {
            get { return repo.NOMBRE; }
            set { repo.NOMBRE = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.btn_agregarDanoYLesionesTerceros' at Center.", repo.SuraClaims.Motor.btn_agregarDanoYLesionesTercerosInfo, new RecordItemIndex(0));
            repo.SuraClaims.Motor.btn_agregarDanoYLesionesTerceros.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'SuraClaims.Motor.InformacionSiniestro.txt_DetalleDelVehiculoDeTercero'", repo.SuraClaims.Motor.InformacionSiniestro.txt_DetalleDelVehiculoDeTerceroInfo, new ActionTimeout(10000), new RecordItemIndex(1));
            repo.SuraClaims.Motor.InformacionSiniestro.txt_DetalleDelVehiculoDeTerceroInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.btn_AgregarConductor' at Center.", repo.SuraClaims.Motor.btn_AgregarConductorInfo, new RecordItemIndex(2));
            repo.SuraClaims.Motor.btn_AgregarConductor.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'SuraClaims.Motor.InformacionSiniestro.txt_DetalleDeLosLesionados'", repo.SuraClaims.Motor.InformacionSiniestro.txt_DetalleDeLosLesionadosInfo, new ActionTimeout(30000), new RecordItemIndex(3));
            repo.SuraClaims.Motor.InformacionSiniestro.txt_DetalleDeLosLesionadosInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.btn_Agregar' at Center.", repo.SuraClaims.Motor.btn_AgregarInfo, new RecordItemIndex(4));
            repo.SuraClaims.Motor.btn_Agregar.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'SuraClaims.Motor.txt_TipoDoc'", repo.SuraClaims.Motor.txt_TipoDocInfo, new ActionTimeout(10000), new RecordItemIndex(5));
            repo.SuraClaims.Motor.txt_TipoDocInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.txt_TipoDoc' at Center.", repo.SuraClaims.Motor.txt_TipoDocInfo, new RecordItemIndex(6));
            repo.SuraClaims.Motor.txt_TipoDoc.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.option_DNI' at 29;9.", repo.SuraClaims.Motor.option_DNIInfo, new RecordItemIndex(7));
            repo.SuraClaims.Motor.option_DNI.Click("29;9");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}' with focus on 'SuraClaims.Motor.txt_TipoDoc'.", repo.SuraClaims.Motor.txt_TipoDocInfo, new RecordItemIndex(8));
            //repo.SuraClaims.Motor.txt_TipoDoc.PressKeys("{LControlKey down}{Akey}{LControlKey up}");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$TipoDocumento' with focus on 'SuraClaims.Motor.txt_TipoDoc'.", repo.SuraClaims.Motor.txt_TipoDocInfo, new RecordItemIndex(9));
            //repo.SuraClaims.Motor.txt_TipoDoc.PressKeys(TipoDocumento);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.txt_DetalleDeLosLesionados' at Center.", repo.SuraClaims.Motor.txt_DetalleDeLosLesionadosInfo, new RecordItemIndex(10));
            repo.SuraClaims.Motor.txt_DetalleDeLosLesionados.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to not exist. Associated repository item: 'SuraClaims.Motor.InformacionSiniestro.Copy_of_txtbox_Apellido'", repo.SuraClaims.Motor.InformacionSiniestro.Copy_of_txtbox_ApellidoInfo, new ActionTimeout(20000), new RecordItemIndex(11));
            repo.SuraClaims.Motor.InformacionSiniestro.Copy_of_txtbox_ApellidoInfo.WaitForNotExists(20000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.txtbox_Numero' at Center.", repo.SuraClaims.Motor.txtbox_NumeroInfo, new RecordItemIndex(12));
            repo.SuraClaims.Motor.txtbox_Numero.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NumeroDNI' with focus on 'SuraClaims.Motor.txtbox_Numero'.", repo.SuraClaims.Motor.txtbox_NumeroInfo, new RecordItemIndex(13));
            repo.SuraClaims.Motor.txtbox_Numero.EnsureVisible();
            Keyboard.Press(NumeroDNI);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.txt_DetalleDeLosLesionados' at Center.", repo.SuraClaims.Motor.txt_DetalleDeLosLesionadosInfo, new RecordItemIndex(14));
            repo.SuraClaims.Motor.txt_DetalleDeLosLesionados.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.txtbox_Nombre' at Center.", repo.SuraClaims.Motor.txtbox_NombreInfo, new RecordItemIndex(15));
            repo.SuraClaims.Motor.txtbox_Nombre.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Nombre' with focus on 'SuraClaims.Motor.txtbox_Nombre'.", repo.SuraClaims.Motor.txtbox_NombreInfo, new RecordItemIndex(16));
            repo.SuraClaims.Motor.txtbox_Nombre.PressKeys(Nombre);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.txtbox_Apellido' at Center.", repo.SuraClaims.Motor.txtbox_ApellidoInfo, new RecordItemIndex(17));
            repo.SuraClaims.Motor.txtbox_Apellido.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Apellido' with focus on 'SuraClaims.Motor.txtbox_Apellido'.", repo.SuraClaims.Motor.txtbox_ApellidoInfo, new RecordItemIndex(18));
            repo.SuraClaims.Motor.txtbox_Apellido.PressKeys(Apellido);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.txt_DetalleDeLosLesionados' at Center.", repo.SuraClaims.Motor.txt_DetalleDeLosLesionadosInfo, new RecordItemIndex(19));
            repo.SuraClaims.Motor.txt_DetalleDeLosLesionados.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.btn_Aceptar' at Center.", repo.SuraClaims.Motor.btn_AceptarInfo, new RecordItemIndex(20));
            repo.SuraClaims.Motor.btn_Aceptar.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'SuraClaims.Motor.InformacionSiniestro.txt_DetalleDelVehiculoDeTercero'", repo.SuraClaims.Motor.InformacionSiniestro.txt_DetalleDelVehiculoDeTerceroInfo, new ActionTimeout(30000), new RecordItemIndex(21));
            repo.SuraClaims.Motor.InformacionSiniestro.txt_DetalleDelVehiculoDeTerceroInfo.WaitForExists(30000);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.SuraClaims.Self, false, new RecordItemIndex(22));
            
            // Datos del vehículo
            Report.Log(ReportLevel.Info, "Section", "Datos del vehículo", new RecordItemIndex(23));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.InformacionSiniestro.txt_AnioVehiculo' at Center.", repo.SuraClaims.Motor.InformacionSiniestro.txt_AnioVehiculoInfo, new RecordItemIndex(24));
            repo.SuraClaims.Motor.InformacionSiniestro.txt_AnioVehiculo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Anio' with focus on 'SuraClaims.Motor.InformacionSiniestro.txt_AnioVehiculo'.", repo.SuraClaims.Motor.InformacionSiniestro.txt_AnioVehiculoInfo, new RecordItemIndex(25));
            repo.SuraClaims.Motor.InformacionSiniestro.txt_AnioVehiculo.EnsureVisible();
            Keyboard.Press(Anio);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'SuraClaims.Motor.InformacionSiniestro.txt_AnioVehiculo'.", repo.SuraClaims.Motor.InformacionSiniestro.txt_AnioVehiculoInfo, new RecordItemIndex(26));
            repo.SuraClaims.Motor.InformacionSiniestro.txt_AnioVehiculo.EnsureVisible();
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SuraClaims.Motor.InformacionSiniestro.Copy_of_txtAnioVehiculo'", repo.SuraClaims.Motor.InformacionSiniestro.Copy_of_txtAnioVehiculoInfo, new ActionTimeout(30000), new RecordItemIndex(27));
            repo.SuraClaims.Motor.InformacionSiniestro.Copy_of_txtAnioVehiculoInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.txt_Marca' at Center.", repo.SuraClaims.Motor.txt_MarcaInfo, new RecordItemIndex(28));
            repo.SuraClaims.Motor.txt_Marca.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Marca' with focus on 'SuraClaims.Motor.txt_Marca'.", repo.SuraClaims.Motor.txt_MarcaInfo, new RecordItemIndex(29));
            repo.SuraClaims.Motor.txt_Marca.PressKeys(Marca);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'SuraClaims.Motor.txt_Marca'.", repo.SuraClaims.Motor.txt_MarcaInfo, new RecordItemIndex(30));
            repo.SuraClaims.Motor.txt_Marca.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SuraClaims.Motor.Copy_of_txtmarca'", repo.SuraClaims.Motor.Copy_of_txtmarcaInfo, new ActionTimeout(30000), new RecordItemIndex(31));
            repo.SuraClaims.Motor.Copy_of_txtmarcaInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.txt_Modelo' at Center.", repo.SuraClaims.Motor.txt_ModeloInfo, new RecordItemIndex(32));
            repo.SuraClaims.Motor.txt_Modelo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Modelo' with focus on 'SuraClaims.Motor.txt_Modelo'.", repo.SuraClaims.Motor.txt_ModeloInfo, new RecordItemIndex(33));
            repo.SuraClaims.Motor.txt_Modelo.PressKeys(Modelo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'SuraClaims.Motor.txt_Modelo'.", repo.SuraClaims.Motor.txt_ModeloInfo, new RecordItemIndex(34));
            repo.SuraClaims.Motor.txt_Modelo.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SuraClaims.Motor.Copy_of_txt_Modelo'", repo.SuraClaims.Motor.Copy_of_txt_ModeloInfo, new ActionTimeout(30000), new RecordItemIndex(35));
            repo.SuraClaims.Motor.Copy_of_txt_ModeloInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.SiniestroTercero.txt_TipoVehiculo' at Center.", repo.SuraClaims.Motor.SiniestroTercero.txt_TipoVehiculoInfo, new RecordItemIndex(36));
            repo.SuraClaims.Motor.SiniestroTercero.txt_TipoVehiculo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Tipo' with focus on 'SuraClaims.Motor.SiniestroTercero.txt_TipoVehiculo'.", repo.SuraClaims.Motor.SiniestroTercero.txt_TipoVehiculoInfo, new RecordItemIndex(37));
            repo.SuraClaims.Motor.SiniestroTercero.txt_TipoVehiculo.PressKeys(Tipo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'SuraClaims.Motor.SiniestroTercero.txt_TipoVehiculo'.", repo.SuraClaims.Motor.SiniestroTercero.txt_TipoVehiculoInfo, new RecordItemIndex(38));
            repo.SuraClaims.Motor.SiniestroTercero.txt_TipoVehiculo.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.InformacionSiniestro.lbl_ElementosBasicosDelVehiculo' at Center.", repo.SuraClaims.Motor.InformacionSiniestro.lbl_ElementosBasicosDelVehiculoInfo, new RecordItemIndex(39));
            repo.SuraClaims.Motor.InformacionSiniestro.lbl_ElementosBasicosDelVehiculo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SuraClaims.Motor.SiniestroTercero.Copy_of_txtTipoVehiculo'", repo.SuraClaims.Motor.SiniestroTercero.Copy_of_txtTipoVehiculoInfo, new ActionTimeout(30000), new RecordItemIndex(40));
            repo.SuraClaims.Motor.SiniestroTercero.Copy_of_txtTipoVehiculoInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.SiniestroTercero.txt_Patente' at Center.", repo.SuraClaims.Motor.SiniestroTercero.txt_PatenteInfo, new RecordItemIndex(41));
            repo.SuraClaims.Motor.SiniestroTercero.txt_Patente.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Patente' with focus on 'SuraClaims.Motor.SiniestroTercero.txt_Patente'.", repo.SuraClaims.Motor.SiniestroTercero.txt_PatenteInfo, new RecordItemIndex(42));
            repo.SuraClaims.Motor.SiniestroTercero.txt_Patente.PressKeys(Patente);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.Motor.InformacionSiniestro.lbl_ElementosBasicosDelVehiculo' at Center.", repo.SuraClaims.Motor.InformacionSiniestro.lbl_ElementosBasicosDelVehiculoInfo, new RecordItemIndex(43));
            repo.SuraClaims.Motor.InformacionSiniestro.lbl_ElementosBasicosDelVehiculo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SuraClaims.Motor.SiniestroTercero.Copy_of_textPatente'", repo.SuraClaims.Motor.SiniestroTercero.Copy_of_textPatenteInfo, new ActionTimeout(30000), new RecordItemIndex(44));
            repo.SuraClaims.Motor.SiniestroTercero.Copy_of_textPatenteInfo.WaitForNotExists(30000);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.SuraClaims.Self, false, new RecordItemIndex(45));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
