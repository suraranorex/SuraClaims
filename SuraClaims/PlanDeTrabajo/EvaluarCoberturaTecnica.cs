///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SuraClaims.PlanDeTrabajo
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EvaluarCoberturaTecnica recording.
    /// </summary>
    [TestModule("f72d3b9e-9029-4832-a315-dd8bc1c410a7", ModuleType.Recording, 1)]
    public partial class EvaluarCoberturaTecnica : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::SuraClaims.SuraClaimsRepository repository.
        /// </summary>
        public static global::SuraClaims.SuraClaimsRepository repo = global::SuraClaims.SuraClaimsRepository.Instance;

        static EvaluarCoberturaTecnica instance = new EvaluarCoberturaTecnica();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EvaluarCoberturaTecnica()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EvaluarCoberturaTecnica Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("e7903828-6ac1-46d3-a887-f52fdafb621a")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.PlanDeTrabajo.a_EvaluarCoberturaTecnica' at Center.", repo.SuraClaims.PlanDeTrabajo.a_EvaluarCoberturaTecnicaInfo, new RecordItemIndex(0));
            repo.SuraClaims.PlanDeTrabajo.a_EvaluarCoberturaTecnica.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'SuraClaims.PlanDeTrabajo.ventana_Actividad'", repo.SuraClaims.PlanDeTrabajo.ventana_ActividadInfo, new ActionTimeout(20000), new RecordItemIndex(1));
            repo.SuraClaims.PlanDeTrabajo.ventana_ActividadInfo.WaitForExists(20000);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.SuraClaims.Self, false, new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.PlanDeTrabajo.bttn_Editar' at Center.", repo.SuraClaims.PlanDeTrabajo.bttn_EditarInfo, new RecordItemIndex(3));
            repo.SuraClaims.PlanDeTrabajo.bttn_Editar.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.PlanDeTrabajo.input_Resultado' at Center.", repo.SuraClaims.PlanDeTrabajo.input_ResultadoInfo, new RecordItemIndex(4));
            repo.SuraClaims.PlanDeTrabajo.input_Resultado.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.PlanDeTrabajo.option_Aceptado' at Center.", repo.SuraClaims.PlanDeTrabajo.option_AceptadoInfo, new RecordItemIndex(5));
            repo.SuraClaims.PlanDeTrabajo.option_Aceptado.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.PlanDeTrabajo.bttn_Actualizar' at Center.", repo.SuraClaims.PlanDeTrabajo.bttn_ActualizarInfo, new RecordItemIndex(6));
            repo.SuraClaims.PlanDeTrabajo.bttn_Actualizar.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'SuraClaims.PlanDeTrabajo.bttn_Editar'", repo.SuraClaims.PlanDeTrabajo.bttn_EditarInfo, new ActionTimeout(20000), new RecordItemIndex(7));
            repo.SuraClaims.PlanDeTrabajo.bttn_EditarInfo.WaitForExists(20000);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.SuraClaims.Self, false, new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuraClaims.PlanDeTrabajo.bttn_Completar' at Center.", repo.SuraClaims.PlanDeTrabajo.bttn_CompletarInfo, new RecordItemIndex(9));
            repo.SuraClaims.PlanDeTrabajo.bttn_Completar.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'SuraClaims.PlanDeTrabajo.a_CompletarChecklistFraude'", repo.SuraClaims.PlanDeTrabajo.a_CompletarChecklistFraudeInfo, new ActionTimeout(20000), new RecordItemIndex(10));
            repo.SuraClaims.PlanDeTrabajo.a_CompletarChecklistFraudeInfo.WaitForExists(20000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
